../AdvancedSetting.py:from MyException import *
../AnalyzePeak.py:from MyException import *
../AnalyzePeak.py:				raise MyException("analyzeAll failed: FWHM is none\n")
../AnalyzePeak.py:				raise MyException("analyzeAll failed: FWHM is none%s\n")
../AnalyzePeak.py:				raise MyException("analyzeAll failed: FWHM is none\n")
../AnalyzePeak.py:				raise MyException("analyzeAll failed: FWHM is none%s\n")
../Anew.py:from MyException import *
../AutoTune.py:from MyException import *
../AutoTune.py:		except MyException,ttt:
../AutoTune.py:			raise MyException("%s: %s\n"%(comment,ttt.args[0]))
../AutoTune.py:		except MyException,ttt:
../AutoTune.py:			raise MyException(ttt.args[0])
../AutoTune.py:		except MyException,ttt:
../AutoTune.py:                        raise MyException("Stage auto tune failed:%s"%ttt.args[0])
../BS.py:from MyException import *
../BS.py:        	except MyException,ttt:
../BSSconfig.py:from MyException import *
../BSSconfig.py:			raise MyException("config string was not found.")
../BSSconfig.py:		except MyException,ttt:
../BSSconfig.py:		#except MyException,ttt:
../BSSconfig.py:	except MyException,ttt:
../BeamCenter.py:from MyException import *
../BeamCenter.py:			raise MyException("Beam monitor did not catch your beam!!")
../BeamCenter.py:			raise MyException("Image size is 0!!!!")
../BeamCenter.py:			raise MyException("Beam monitor did not catch your beam!!")
../Capture.py:                except MyException,ttt:
../Capture.py:			raise MyException("captureBM failed: %s\n"%ttt.args[0])
../Capture.py:                except MyException,ttt:
../Capture.py:			raise MyException("captureBM failed: %s\n"%ttt.args[0])
../Capture.py:			raise MyException("caputured image has no beam profile")
../Capture.py:			#raise MyException("captureBM failed: Beam is too intense")
../Capture.py:	#except MyException,ttt:
../Colli.py:                except MyException,ttt:
../ConfigFile.py:from MyException import *
../ConfigFile.py:			raise MyException("getCondition:No such a key!\n")
../ConfigFile.py:				raise MyException("getCondition:No such a key!\n")
../ConfigFile.py:			raise MyException("getCondition:No such a key!\n")
../ConfigFile.py:        except MyException,ttt:
../Cryo.py:                except MyException,ttt:
../Daily.py:        	except MyException,ttt:
../DiffScan.py:from MyException import *
../DiffScan.py:			raise MyException("Beam monitor did not catch your beam!!")
../DiffScan.py:			raise MyException("Beam monitor did not catch your beam!!")
../DiffscanLog.py:from MyException import *
../FindNeedle.py:			raise MyException("Needle was not found")
../FixedPoint.py:        	except MyException,ttt:
../FixedPoint.py:        	except MyException,ttt:
../FixedPoint.py:        	except MyException,ttt:
../GonioVec.py:from MyException import *
../GonioVec.py:			raise MyException("Scan number is grater than 1\n")
../GonioVec.py:			raise MyException("Scan length is longer than 0.5um\n")
../GonioVec.py:			raise MyException("Scan step should be greater than 0.5um!")
../GonioVec.py:	#except MyException,e:
../GonioVec.py:	#except MyException,e:
../ImageGrav.py:from MyException import *
../ImageGrav.py:			raise MyException("Beam monitor did not catch your beam!!")
../Mirror.py:from MyException import *
../Mono.py:from MyException import *
../Mono.py:        except MyException,ttt:
../Mono.py:        except MyException,ttt:
../Mono.py:        except MyException,ttt:
../Mono.py:		raise MyException("Dtheta1 tune peak analysis failed.%s"%ttt.args[0])
../Mono.py:		raise MyException("Bad peak shape!!")
../Mono.py:        except MyException,ttt:
../Mono.py:        except MyException,ttt:
../Mono.py:		raise MyException("Dtheta1 tune peak analysis failed.%s"%ttt.args[0])
../Mono.py:		raise MyException("Bad peak shape!!")
../Mono.py:	#except MyException,ttt:
../Morning.py:from MyException import *
../Morning.py:			        raise MyException("Stage movement is too large Y:%8.4f\n"%(y_move))
../Morning.py:				raise MyException("Stage movement is too large z:%8.4f y:%8.4f\n"%(z_move,y_move))
../Motor.py:        	except MyException,ttt:
../MountPin.py:from MyException import *
../MountPin.py:        	except MyException,ttt:
../MountPin.py:        	except MyException,ttt:
../MyException.py:class MyException(Exception): pass
../Picture.py:from MyException import *
../Picture.py:			raise MyException("Beam monitor did not catch your beam!!")
../Picture.py:			raise MyException("Beam monitor did not catch your beam!!")
../Procedure.py:        	except MyException,ttt:
../SPACE.py:from MyException import *
../SPACE.py:			raise MyException("Sample exists!")
../SPACE.py:			raise MyException("Tray ID exceeds 4\n")
../SPACE.py:			raise MyException("Sample ID exceeds 16!\n")
../SPACE.py:			raise MyException("Gonio sample does not exist!!\n")
../SPACE.py:        #except MyException,ttt:
../SPACE.py:        #except MyException,ttt:
../ScanAxis.py:from MyException import *
../ScanAxis.py:			raise MyException("Scanning conidtion is not correct!!\n")
../ScanAxis.py:	except MyException,ttt:
../Stage.py:			raise MyException("Stage Z movement is quite large. (>10.0um)")
../Stage.py:			raise MyException("Stage Y movement is quite large. (>50.0um)")
../StageTune.py:from MyException import *
../StageTune.py:			raise MyException("Stage movement is too large z:%8.4f y:%8.4f\n"%(diff_z,diff_y))
../StageTune.py:		except MyException,ttt:
../StageTune.py:			raise MyException("gain tuning failed: %s\n"%ttt.args[0])
../StageTune.py:				raise MyException("Stage movement is too large z:%8.4f y:%8.4f\n"%(z_move,y_move))
../StageTune.py:		except MyException,ttt:
../StageTune.py:			raise MyException("savePosition() failed: %s\n"%ttt.args[0])
../TestTest.py:from MyException import *
../TestTest.py:		except MyException,ttt:
../TestTest.py:			raise MyException("gain tuning failed: %s\n"%ttt.args[0])
../TestTest.py:				raise MyException("Stage movement is too large z:%8.4f y:%8.4f\n"%(z_move,y_move))
../TestTest.py:		except MyException,ttt:
../TestTest.py:			raise MyException("savePosition() failed: %s\n"%ttt.args[0])
../VectorGonio.py:from MyException import *
../VectorGonio.py:			raise MyException("Vector length should be 3D")
../VectorGonio.py:			raise MyException("Scan step should be greater than 0.5um!")
../VectorGonio.py:	except MyException,e:
../auto.py:from MyException import *
../auto_tune.py:from MyException import *
../auto_tune.py:	except MyException,ttt:
../auto_tune.py:        except MyException,ttt:
../auto_tune.py:        except MyException,ttt:
../dtheta_tune_peak_2hours.py:        except MyException,ttt:
../dtheta_tune_peak_config.py:        except MyException,ttt:
../dtheta_tune_per_time.py:        except MyException,ttt:
../exp_test.py:from MyException import *
../fes_scan.121028.py:    except MyException,ttt:
../fes_scan.130126.py:    except MyException,ttt:
../fes_scan.py:    except MyException,ttt:
../fes_scan_hori.py:    except MyException,ttt:
../long_fixed.py:from MyException import *
../long_fixed.py:		except MyException,ttt:
../making_stage_resolution.py:from MyException import *
../pppp.py:from MyException import *
../pppp.py:		except MyException,ttt:
../pppp.py:			raise MyException("gain tuning failed: %s\n"%ttt.args[0])
../stage_param.py:from MyException import *
../tttt.py:from MyException import *
