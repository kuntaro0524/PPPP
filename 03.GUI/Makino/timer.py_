#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Fri May 28 02:23:17 2010

import wx
import datetime
import time

# begin wxGlade: extracode
# end wxGlade



class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Previous exchange")
        self.prevWindow = wx.TextCtrl(self, -1, "", style=wx.TE_READONLY)
        self.label_1_copy = wx.StaticText(self, -1, "Remained time[sec]")
        self.remainedTime = wx.TextCtrl(self, -1, "", style=wx.TE_READONLY)
        self.button_1_copy = wx.Button(self, -1, "Exchange finished")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.pushExButton, self.button_1_copy)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        self.prevWindow.SetMinSize((150, 28))
        self.prevWindow.SetBackgroundColour(wx.Colour(216, 216, 191))
        self.remainedTime.SetMinSize((150, 28))
        self.remainedTime.SetBackgroundColour(wx.Colour(255, 255, 0))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.label_1, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(self.prevWindow, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(self.label_1_copy, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(self.remainedTime, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(self.button_1_copy, 0, wx.ADJUST_MINSIZE, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def pushExButton(self, event): # wxGlade: MyFrame.<event_handler>
	print "Pushed"
        self.starttime=datetime.datetime.now()
	tmpstr="%s"%self.starttime
	#print tmpstr

	self.prevWindow.SetValue(tmpstr)
	self.remainedTime.SetValue("START!!!")

	self.whileLoop()

    def whileLoop(self):
	while(1):
	   time.sleep(1.0)
       	   currtime=datetime.datetime.now()
	   diff=(currtime-self.starttime).seconds
	   print currtime,diff

	   if diff>3600*2.0: 
		return 1

           timestr="%8.3f"%diff
           print timestr
           self.remainedTime.SetValue(timestr)

# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
